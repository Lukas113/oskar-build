name: Build Binary Packages Linux

on: [ push ]

jobs:
  build_oskar:
    runs-on: ubuntu-20.04
    container: ubuntu
    steps:
      - name: Install build tools
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git build-essential cmake python3 casacore-dev
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Package
        run: |
          chmod +x package.sh
          bash -e package.sh
      - name: Archive binaries
        uses: actions/upload-artifact@v2
        with:
          name: OSKAR Binaries ${{ runner.os }}
          path: |
            oskar-binaries-${{ runner.os }}-x86_64.tar.gz
  build_casacore:
    runs-on: ubuntu-20.04
    container: ubuntu
    steps:
      - name: Install build dependencies
        run: |
        apt-get install wget build-essential cmake gfortran g++ libncurses5-dev \
        libreadline-dev flex bison libblas-dev liblapacke-dev libcfitsio-dev \
        wcslib-dev libfftw3-dev
      - name: Download tar
        run: |
          wget https://github.com/casacore/casacore/archive/refs/tags/v3.4.0.tar.gz
          tar zxf casacore.tar.gz
          mkdir casacore-build
          cd casacore-build
          cmake ../casacore-src/
          make

  test_user_space_binaries:
    needs: build_and_upload
    runs-on: ubuntu-20.04
    container: ubuntu
    steps:
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: OSKAR Binaries ${{ runner.os }}
      - name: Install essential components
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y git wget unzip python3 python3-pip casacore-dev
      - name: Install and test
        shell: bash
        run: |
          tar -xvzf oskar-binaries-${{ runner.os }}-x86_64.tar.gz
          cd package-${{ runner.os }}
          chmod +x test.sh
          chmod +x install.sh
          bash -e install.sh
          bash -e test.sh
      - name: Save test result
        uses: actions/upload-artifact@v2
        with:
          name: Test Results ${{ runner.os }}
          path: |
            package-${{ runner.os }}/result.vis
            package-${{ runner.os }}/result.ms
