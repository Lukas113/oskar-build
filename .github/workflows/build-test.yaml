name: Build Binary Packages Linux

on: [ push ]

jobs:
  build_binaries:
    runs-on: ubuntu-20.04
    container: ubuntu
    steps:
      - name: Install build dependencies
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y wget build-essential cmake gfortran g++ libncurses5-dev \
          libreadline-dev flex bison libblas-dev liblapacke-dev libcfitsio-dev \
          wcslib-dev libfftw3-dev
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Build Casacore And Oskar
        run: |
          chmod +x build.sh
          bash -e build.sh
          ls
      - name: Archive binaries
        uses: actions/upload-artifact@v2
        with:
          name: Binaries Linux
          path: |
            binaries-Linux-x86_64.tar.gz
  install_binaries:
    needs: build_binaries
    runs-on: ubuntu-20.04
    container: ubuntu
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: Binaries Linux
      - name: Install essential components
        run: |
          apt-get update
          DEBIAN_FRONTEND=noninteractive apt-get install -y python3 python3-pip
      - name: Install
        shell: bash
        run: |
          chmod +x install-package.sh
          bash -e install-package.sh ~/pipeline
      - name: Test
        shell: bash
        run: |
          chmod +x test.sh
          bash -e test.sh
      - name: Save test result
        uses: actions/upload-artifact@v2
        with:
          name: Test Results ${{ runner.os }}
          path: |
            result.vis
            result.ms
